<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/addCar.css">

    <title>Add Car</title>
</head>
<body>
    <div class="header">
        <a href="/">
            <img src="/img/belair.png" alt="Belair illustration" class="icon"> <!-- starting w/ "/" indicates public folder as root for img src. -->
        </a>
        <h1 class="title">Get the Best Offers with Classic Car Depot</h1>
    </div>
   

    <form class="carForm" action="/" method="post" enctype="multipart/form-data">
        <h1 class="formTitle">Tell us about your ride!</h1>
        <select class="year" name="year" id="year" onclick=sortMake(event.target.value)>
            <option value="year">Year</option>
            <% for(let i = 1965; i < 2001; i++){ %>
                <option value=<%=i%>><%=i%></option>
            <%} %>
        </select>

        
        <select class="make" name="make" id="makeInput" onclick=sortModel(event.target.value)>
            <!-- if Statement unlocking make options -->
            <option value="make">Make</option>
        </select>

        <select class="model" name="model" id="modelInput" required>
            <!-- if Statement unlocking make options -->
            <option value="model">Model</option>
        </select>

        <div class="radioContainer">
            <h4 class="radioTitle">Transmission:</h4>
            <label id="autoLabel" for="auto">Automatic: </label>
            <input id="auto" name='trans' type="radio" value="automatic" onclick=handleCheck(event.target.id)>
    
            <label id="manualLabel" for="manual">Manual: </label>
            <input id="manual" name="trans" type="radio" value="manual" onclick=handleCheck(event.target.id)>
    
        </div>

        <div class="priceContainer">
            <label id="priceLabel" for="price">Asking Price USD: </label>
            <input id="price" type="number" step=".01" min='1000'> <!-- ADD REQUIRED -->
    
        </div>

        <label id="descriptionLabel" for="description">Description: </label>
        <textarea name="description" id="description"></textarea> <!-- ADD REQUIRED -->

        <div class="fileContainer">
            <label id="imgUploadLabel"for="imgUpload">Upload Images of your ride:</label>
            <input name="imgUpload" type="file" id="imgUpload" accept="image/*" onchange=previewPhoto(event.target) class="file1"> <!-- add an image previewer -->    
        </div>

        <div class="imgContainer"></div> <!-- uploaded imgs will append here to viewing -->

        <button class="submit">Submit</button>
    </form>
    <button class="addFile" onclick=addFile()>Add Additional Photo</button> <!-- removed from form to prevent submit -->


    <p class="data"> <%= JSON.stringify(results) %></p> <!-- allows for front end data manipulation. Display = "none" -->
   
    <div class="footer">
        <p class="disclaimer">Car must have been manufactured before the year 2001 to be posted on our site.</p>

    </div>
</body>

<script>
    const carElement = document.querySelector('.data')
    const carData = JSON.parse(carElement.textContent) // immutible global


    function sortMake(year){
        if(year !== 'year'){
            const makeSelect = document.querySelector('.make')
            
            let makes = {}
            let options = []
            
            carData.forEach((item) =>{
                let first = parseInt(item.yearrange[0] + item.yearrange[1] + item.yearrange[2] + item.yearrange[3])
                let last = parseInt(item.yearrange[5] + item.yearrange[6] + item.yearrange[7] + item.yearrange[8])
                
                if((first <= year && last >= year) && makes[item.make] === undefined ){
                    makes[item.make] = true
                    options.push(item.make)
                }
            })

            options.sort()

            wipeOptions(['make', 'model'])
            createOptions(makeSelect, options)
        }
    }

    function sortModel(make){
        let modelSelect = document.querySelector('.model')
        let models = []
        
        carData.forEach(item =>{
            if(item.make === make){
                models.push(item.model)
            }
        })
        models.sort()

        wipeOptions(['model']) //preserves 'make' options
        createOptions(modelSelect, models)
    }

    function wipeOptions(elements){
        elements.forEach(element =>{
            let parent = document.querySelector(`.${element}`)
            
            let OGoption = parent[0] //Preserves make/model default "option" 
            parent.innerHTML = '' //removes any residual options
            parent.appendChild(OGoption) //appends make/model "option"
        })
    }

    function createOptions(parent, array){        
        array.map(item =>{
                let makeElement = document.createElement('option')
                makeElement.value = item
                makeElement.textContent = item
                makeElement.name = item

                parent.appendChild(makeElement)
            })
    }

    function handleCheck(target){
        let uncheckId = ''

        if(target === 'auto'){
            uncheckId = 'manual'
        }
        else{
            uncheckId = 'auto'
        }
        const targetRadio = document.querySelector(`#${uncheckId}`)
        targetRadio.checked = false
    }

    function previewPhoto(){ 
        const fileElement = event.target
        fileElement.id = 'hideFile' //hide uploaded file w/ css
        addFile() //add new input

        const file = fileElement.files
        const number = event.target.className[event.target.className.length - 1]
        if(file){
            const singleContainer = document.createElement('div')
            singleContainer.id = 'singleContainer'
            singleContainer.className = 'singleContainer' + number // same number as associated file and components

            const imgPreview = document.createElement('img')
            imgPreview.id = 'imgPreview'
            imgPreview.alt="Preview of Uploaded Img"
            imgPreview.className = 'img' + number //file input = 'file' + # --- imgPreview = 'img' + # --- deleteBtn = delete + # 
            
            createSrc(imgPreview, file) //sets img src
            
            const deleteBtn = document.createElement('p')
            deleteBtn.id = 'deleteBtn'
            deleteBtn.className = 'delete' + number
            deleteBtn.textContent = "Remove"
            deleteBtn.onclick = handleDelete
            
            singleContainer.append(imgPreview, deleteBtn)

            const parent = document.querySelector('.imgContainer')
            parent.appendChild(singleContainer)
        }
    }
    function createSrc(imgPreview, file){
        const fileReader = new FileReader();

        fileReader.onload = event => {
                imgPreview.setAttribute('src', event.target.result);
        }
        fileReader.readAsDataURL(file[0])
    }

    function addFile(){
        const fileContainer = document.querySelector('.fileContainer')
        let length = getLength(fileContainer)

        const uploadImg = document.createElement('input')
        uploadImg.type = 'file'
        uploadImg.accept = 'image/*'
        uploadImg.id = 'imgUpload'
        uploadImg.className = `file${length + 1}` // ties the file input to its corresponding image preview
        uploadImg.onchange = previewPhoto
        fileContainer.append(uploadImg)
    }
    function getLength(fileContainer){
        let length = 0
        for(let i in fileContainer.childNodes){
            if(fileContainer.childNodes[i].name === 'imgUpload'){
                length ++
            }
        }
        return length
    }

    function handleDelete(){ //removes img, btn, and file
        const number = event.target.className[event.target.className.length - 1]
        const imgContainer = document.querySelector('.imgContainer')
        const fileContainer = document.querySelector('.fileContainer')
        
        const 
            targetContainer = document.querySelector('.singleContainer' + number),
            file = document.querySelector('.file' + number)

        imgContainer.removeChild(targetContainer)
        fileContainer.removeChild(file)
    }    
</script>

</html>